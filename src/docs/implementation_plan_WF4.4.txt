总目标：基于 API Contract 4 - New Case Form 实现 pages/NewCase.tsx 的完整功能，直接调用 DHIS2 后端（Basic Auth，config.json），严格按合同执行，包含分步表单、TEI 查重/创建、Enrollment 创建、Investigation 事件创建、草稿缓存、本地预览与最终提交、错误提示与继续编辑。

实现步骤总览（Y=8）：

1) 新增服务模块 newCaseService.ts
- 目的：封装 WF-4.4 相关 API 调用与数据映射，提供统一方法：加载元数据、按身份证查重、创建/更新 TEI、创建/更新 Enrollment、创建/更新 Investigation 事件、保存草稿缓存、加载草稿缓存。
- 预期输出：services/newCaseService.ts（≤200行），导出类型与函数：loadProgramMeta, loadOptionSetCached, getMeDefaultOu, searchPersonByNationalId, buildCreatePayload, createCaseNested, createOrUpdateEnrollment, upsertInvestigationEvent, getTeiSummary, saveDraftToLocal, loadDraftFromLocal, clearDraft, mapFormToTrackerValues 等。

2) 分步子表单组件拆分 components/newcase/*
- 目的：将 NewCase 的四步表单拆分为独立组件，便于验证与复用，满足单文件≤200行。组件：
  - StepBasicInfo.tsx（基本信息 + 报告信息，字段校验/联动）
  - StepEpiInfo.tsx（暴露史/接触史/旅行史）
  - StepDiagnosis.tsx（初步/确诊诊断、来源、日期校验）
  - StepConfirm.tsx（确认预览）
- 预期输出：4个tsx组件文件，每个≤200行，具备受控表单支持与必要校验规则。

3) 重写 pages/NewCase.tsx（多步控制/缓存/提交）
- 目的：集成步骤流转、加载元数据与选项集、默认 OU、身份证查重逻辑、草稿保存与恢复、调用服务完成创建/更新流程、错误处理、成功后跳转详情。
- 预期输出：pages/NewCase.tsx 最终实现（≤200行，若超过则拆分辅助hook文件）。

4) 在 services/caseDetailsService.ts 增补便捷方法（如需要）
- 目的：若需要读取 TEI 提交后的确认摘要或共用方法（已存在 getCaseDetails），可复用现有。尽量不改动现有文件；不需要则跳过。
- 预期输出：如无必要则不改动。

5) 新增工具 hooks/newCase/useNewCaseMeta.ts（可选）
- 目的：封装加载元数据/选项集/当前用户 OU 的 hook，精简 NewCase 页面代码量，控制单文件行数。
- 预期输出：hooks/newCase/useNewCaseMeta.ts（≤200行）。若 NewCase 未超200行则跳过，本迭代先不创建。

6) 新增工具 utils/validation.ts（可选）
- 目的：复用身份证、手机号、日期比较等校验函数，减少重复。若组件内可简洁实现则跳过。本迭代先不创建。

7) 路由与菜单无需变更
- 目的：保留现有路由结构，仅替换 NewCase.tsx 行为。

8) 自测与错误处理完善
- 目的：确认以下场景：
  - 身份证查重→已有 TEI→仅创建 Enrollment+Event（API-06）。
  - 新建→TEI+Enrollment+Event（API-05）。
  - Enrollment AtrCaseNo01空值失败→重试使用随机字符串。
  - 保存草稿到 localStorage（按身份证号或临时键），切步/点保存时保存，提交成功后清除。
  - 提交后跳转 /cases/:teiUid，或至少提示成功（如无法拿到ID则回列表）。